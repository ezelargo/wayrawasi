@model WayraWasi.Models.Reserva
@{
    ViewBag.Title = "Editar Reservación";
    List<WayraWasi.Models.Cabania> cabañas = ViewBag.Cabanias;
    List<string> estados = new List<string> { "Reservado", "Check-in finalizado", "Check-out finalizado" };
    Cabania cabañaSeleccionada = ViewBag.CabaniaSeleccionada;
}

<h2>Editar Reservación</h2>

@Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(model => model.IdReservacion)

        <div class="form-group">
            @Html.LabelFor(model => model.NombreCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaEntrada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaEntrada, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaEntrada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaSalida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaSalida, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaSalida, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeroPersonas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroPersonas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroPersonas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCabania, "Cabañas", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="IdCabania" name="IdCabania" class="form-control">
                    @if (cabañaSeleccionada.IdCabania != -1)
                    {
                        <option value="@cabañaSeleccionada.IdCabania" selected>@cabañaSeleccionada.NombreCabania</option>
                    }
                    @if (cabañas != null && cabañas.Count > 0)
                    {
                        @foreach (var cabania in cabañas)
                        {
                            @if (cabañaSeleccionada.IdCabania != cabania.IdCabania)
                            {
                                <option value="@cabania.IdCabania">@cabania.NombreCabania</option>
                            }
                            
                        }
                    }
                    else
                    {
                        <option value="">No hay cabañas disponibles</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.IdCabania, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Cabania.Capacidad, new { id = "CapacidadCabaña" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Estado, new SelectList(estados), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary" /> |
                <a href="@Url.Action("Index")" class="btn btn-danger">Cancelar</a>
            </div>
        </div>
    </div>
}
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}